# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatbuffers

import flatbuffers

class ImageViewOptions(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsImageViewOptions(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ImageViewOptions()
        x.Init(buf, n + offset)
        return x

    # ImageViewOptions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ImageViewOptions
    def WidgetOptions(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .WidgetOptions import WidgetOptions
            obj = WidgetOptions()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ImageViewOptions
    def FileNameData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .ResourceData import ResourceData
            obj = ResourceData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ImageViewOptions
    def CapInsets(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = o + self._tab.Pos
            from .CapInsets import CapInsets
            obj = CapInsets()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ImageViewOptions
    def Scale9Size(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = o + self._tab.Pos
            from .FlatSize import FlatSize
            obj = FlatSize()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ImageViewOptions
    def Scale9Enabled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def ImageViewOptionsStart(builder): builder.StartObject(5)
def ImageViewOptionsAddWidgetOptions(builder, widgetOptions): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(widgetOptions), 0)
def ImageViewOptionsAddFileNameData(builder, fileNameData): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(fileNameData), 0)
def ImageViewOptionsAddCapInsets(builder, capInsets): builder.PrependStructSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(capInsets), 0)
def ImageViewOptionsAddScale9Size(builder, scale9Size): builder.PrependStructSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(scale9Size), 0)
def ImageViewOptionsAddScale9Enabled(builder, scale9Enabled): builder.PrependBoolSlot(4, scale9Enabled, 0)
def ImageViewOptionsEnd(builder): return builder.EndObject()
